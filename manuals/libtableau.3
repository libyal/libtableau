.Dd September  3, 2017
.Dt libtableau 3
.Os libtableau
.Sh NAME
.Nm libtableau.h
.Nd Library to read from the Tableau (TM) forenisc bridge (write blocker)
.Sh LIBRARY
.Lb libtableau
.Sh SYNOPSIS
.In libtableau.h
.Pp
.Ft void
.Fn libtableau_set_notify_values "FILE *stream, uint8_t verbose"
.Ft int
.Fn libtableau_handle_initialize "libtableau_handle_t **handle"
.Ft int
.Fn libtableau_handle_free "libtableau_handle_t **handle"
.Ft int
.Fn libtableau_open "libtableau_handle_t *handle, const char *filename"
.Ft int
.Fn libtableau_close "libtableau_handle_t *handle"
.Ft int
.Fn libtableau_query "libtableau_handle_t *handle"
.Ft int
.Fn libtableau_detected_dco "libtableau_handle_t *handle"
.Ft int
.Fn libtableau_remove_dco "libtableau_handle_t *handle"
.Ft int
.Fn libtableau_get_drive_amount_of_sectors "libtableau_handle_t *handle, uint32_t *amount_of_sectors"
.Ft int
.Fn libtableau_get_hpa_amount_of_sectors "libtableau_handle_t *handle, uint32_t *amount_of_sectors"
.Ft int
.Fn libtableau_get_dco_amount_of_sectors "libtableau_handle_t *handle, uint32_t *amount_of_sectors"
.Ft int
.Fn libtableau_get_amount_of_tableau_values "libtableau_handle_t *handle, uint32_t *amount_of_values"
.Pp
When the library was compiled with narrow character support (default) the following functions are available
.Ft const char *
.Fn libtableau_get_version "void"
.Ft int
.Fn libtableau_get_header_value_identifier "libtableau_handle_t *handle, uint32_t index, char *value, size_t length"
.Ft int
.Fn libtableau_get_header_value "libtableau_handle_t *handle, char *identifier, char *value, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_firmware_stepping "libtableau_handle_t *handle, char *bridge_firmware_stepping, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_channel_index "libtableau_handle_t *handle, char *bridge_channel_index, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_channel_type "libtableau_handle_t *handle, char *bridge_channel_type, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_debug_firmware "libtableau_handle_t *handle, char *bridge_debug_firmware, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_mode_read_only "libtableau_handle_t *handle, char *bridge_mode_read_only, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_report_read_only "libtableau_handle_t *handle, char *bridge_report_read_only, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_report_write_error "libtableau_handle_t *handle, char *bridge_report_write_error, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_serial_number "libtableau_handle_t *handle, char *bridge_serial_number, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_vendor "libtableau_handle_t *handle, char *bridge_vendor, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_model "libtableau_handle_t *handle, char *bridge_model, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_firmware_date "libtableau_handle_t *handle, char *bridge_firmware_date, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_firmware_time "libtableau_handle_t *handle, char *bridge_firmware_time, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_vendor "libtableau_handle_t *handle, char *drive_vendor, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_model "libtableau_handle_t *handle, char *drive_model, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_serial_number "libtableau_handle_t *handle, char *drive_serial_number, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_revision_number "libtableau_handle_t *handle, char *drive_revision_number, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_hpa_support "libtableau_handle_t *handle, char *drive_hpa_support, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_hpa_in_use "libtableau_handle_t *handle, char *drive_hpa_in_use, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_dco_support "libtableau_handle_t *handle, char *drive_dco_support, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_dco_in_use "libtableau_handle_t *handle, char *drive_dco_in_use, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_security_support "libtableau_handle_t *handle, char *drive_security_support, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_security_in_use "libtableau_handle_t *handle, char *drive_security_in_use, size_t length"
.Pp
When the library was compiled with wide character support the following functions are available instead of the narrow character functions
.Ft const wchar_t *
.Fn libtableau_get_version "void"
.Ft int
.Fn libtableau_get_header_value_identifier "libtableau_handle_t *handle, uint32_t index, wchar_t *value, size_t length"
.Ft int
.Fn libtableau_get_header_value "libtableau_handle_t *handle, wchar_t *identifier, wchar_t *value, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_firmware_stepping "libtableau_handle_t *handle, wchar_t *bridge_firmware_stepping, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_channel_index "libtableau_handle_t *handle, wchar_t *bridge_channel_index, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_channel_type "libtableau_handle_t *handle, wchar_t *bridge_channel_type, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_debug_firmware "libtableau_handle_t *handle, wchar_t *bridge_debug_firmware, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_mode_read_only "libtableau_handle_t *handle, wchar_t *bridge_mode_read_only, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_report_read_only "libtableau_handle_t *handle, wchar_t *bridge_report_read_only, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_report_write_error "libtableau_handle_t *handle, wchar_t *bridge_report_write_error, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_serial_number "libtableau_handle_t *handle, wchar_t *bridge_serial_number, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_vendor "libtableau_handle_t *handle, wchar_t *bridge_vendor, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_model "libtableau_handle_t *handle, wchar_t *bridge_model, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_firmware_date "libtableau_handle_t *handle, wchar_t *bridge_firmware_date, size_t length"
.Ft int
.Fn libtableau_get_header_value_bridge_firmware_time "libtableau_handle_t *handle, wchar_t *bridge_firmware_time, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_vendor "libtableau_handle_t *handle, wchar_t *drive_vendor, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_model "libtableau_handle_t *handle, wchar_t *drive_model, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_serial_number "libtableau_handle_t *handle, wchar_t *drive_serial_number, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_revision_number "libtableau_handle_t *handle, wchar_t *drive_revision_number, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_hpa_support "libtableau_handle_t *handle, wchar_t *drive_hpa_support, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_hpa_in_use "libtableau_handle_t *handle, wchar_t *drive_hpa_in_use, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_dco_support "libtableau_handle_t *handle, wchar_t *drive_dco_support, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_dco_in_use "libtableau_handle_t *handle, wchar_t *drive_dco_in_use, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_security_support "libtableau_handle_t *handle, wchar_t *drive_security_support, size_t length"
.Ft int
.Fn libtableau_get_header_value_drive_security_in_use "libtableau_handle_t *handle, wchar_t *drive_security_in_use, size_t length"
.Pp
When wide character support functions like wmain and wopen are present and libtableau is compiled with
.Ar HAVE_WIDE_CHARACTER_SUPPORT_FUNCTIONS
,
.Ar LIBTABLEAU_WIDE_CHARACTER_FILE_FUNCTIONS
 is defined in libtableau/types.h and the following functions will replace their narrow character functions.
.Ft libtableau_handle_t *
.Fn libtableau_open "libtableau_handle_t *handle, const wchar_t *filename"
.Sh DESCRIPTION
The
.Fn libtableau_get_version
function is used to retrieve the library version.
.Sh RETURN VALUES
Most of the functions return NULL or -1 on error, dependent on the return type. For the actual return values refer to libtableau.h
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh BUGS
Please report bugs of any kind on the project issue tracker: https://github.com/libyal/libtableau/issues
.Sh AUTHOR
These man pages were written by Joachim Metz.
.Sh COPYRIGHT
Copyright (C) 2008-2017, Joachim Metz <joachim.metz@gmail.com>.
This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
the libtableau.h include file
